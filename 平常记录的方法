## 查看变量的数据类型
  例： var num = 123;  toString.call(num) => [object Number]

 ##过期时间
 
# 很遗憾，localstorage原生是不支持设置过期时间的，想要设置的话，就只能自己来封装一层逻辑来实现：

function set(key,value){
  var curtime = new Date().getTime();//获取当前时间
  localStorage.setItem(key,JSON.stringify({val:value,time:curtime}));//转换成json字符串序列
}
function get(key,exp)//exp是设置的过期时间
{
  var val = localStorage.getItem(key);//获取存储的元素
  var dataobj = JSON.parse(val);//解析出json对象
  if(new Date().getTime() - dataobj.time > exp)//如果当前时间-减去存储的元素在创建时候设置的时间 > 过期时间
  {
    console.log("expires");//提示过期
  }
  else{
    console.log("val="+dataobj.val);
  }
}


## 设置时间改为几天/月/周前

export const timeDiff = (dateStr) =>{  //计算时间  参数：时间
    let date = new Date(dateStr); //由于传过来的时间为UTC时间格式，需要用toLocaleString()转换，将上下午去掉
    let dataTimeStamp = Date.parse(date.toLocaleString().replace(/[下午 | 上午]/g,' '));
    let minute = 1000 * 60; //分
    let hour = minute * 60; //时
    let day = hour * 24;  //天
    let month = day * 30; //月
    let now = new Date().getTime();  //当前时间戳
    let diffValue = now - dataTimeStamp;  //当前时间戳-传过来的时间戳 = 时间差
    if(diffValue < 0){return ;}
    let monthC = diffValue/month;   //几个月
    let weekC = diffValue/(7*day);  //几个周
    let dayC = diffValue/day;    //几天
    let hourC = diffValue/hour;  //几个小时
    let minC = diffValue/minute;  //几分钟
    if(monthC >= 1){
      return ''+parseInt(monthC)+' 月前';
    }else if(weekC >=1){
      return ''+parseInt(weekC)+' 周前';
    }else if(dayC >=1){
      return ''+parseInt(dayC)+' 天前';
    }else if(hourC >=1){
      return ''+parseInt(hourC)+' 小时前';
    }else if(minC >=1){
      return ''+parseInt(minC)+' 分钟前';
    }else{
      return '刚刚';
    }
  };

#####################################
// 语法：
// 使用 getPropertyValue 来指定获取的属性
window.getComputedStyle("元素", "伪类").getPropertyValue(style);
